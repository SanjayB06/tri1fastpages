{
  
    
        "post0": {
            "title": "Week 3 Focus/Habits",
            "content": "Short and Long Term Goals . Bench 200 | Learn more in areas of interest | Get good grades in school | Get a successful job | Develop better work ethic | develop better focus and study habits | maintain a happy mindset | . Psychology and the Good Life Notes . college isn’t just like admissions packet | Students feel unfulfilled and stressed | anxiety is dominant | stress takes a toll | college students have more than the average amount of stress | stress affects future workers | college students have a high amount of loneliness | .",
            "url": "https://sanjayb06.github.io/tri1fastpages/markdown/2022/11/09/Focus-and-Habits.html",
            "relUrl": "/markdown/2022/11/09/Focus-and-Habits.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Python Notebook",
            "content": "print(&quot;Hello World&quot;) print(&quot;Sanjay&#39;s Python Notebook&quot;) . Hello World Sanjay&#39;s Python Notebook .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/10/01/Python-Jupyter-Notebook.html",
            "relUrl": "/2022/10/01/Python-Jupyter-Notebook.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Primitives Notebook",
            "content": "public class Primitives { public static void main(String[] args) { int sampleint = 1324; double sampledouble = 3.14; boolean samplebool = false; String samplestring = &quot;hello world&quot;; String diffstring = new String(&quot;hllo wrld&quot;); System.out.println(&quot;Integer: &quot; + sampleint); System.out.println(&quot;Double: &quot; + sampledouble); System.out.println(&quot;Boolean: &quot; + samplebool); System.out.println(&quot;String: &quot; + samplestring); System.out.println(&quot;Different String: &quot; + diffstring); } } Primitives.main(null) . Integer: 1324 Double: 3.14 Boolean: false String: hello world Different String: hllo wrld . import java.util.Scanner; public class InpPrimitives { public static void main(String[] args) { Scanner input; input = new Scanner(System.in); System.out.print(&quot;Type an integer: &quot;); try { int UserIntInput = input.nextInt(); System.out.println(UserIntInput); } catch (Exception e) { // if not an integer System.out.println(&quot;That is not an integer (form like 159), &quot; + e); } input.close(); input = new Scanner(System.in); System.out.print(&quot;Type a double: &quot;); try { double UserDoubleInput = input.nextDouble(); System.out.println(UserDoubleInput); } catch (Exception e) { System.out.println(&quot;That is not a double (form like 9.99), &quot; + e); } input.close(); input = new Scanner(System.in); System.out.print(&quot;Type a boolean: &quot;); try { boolean UserBoolInput = input.nextBoolean(); System.out.println(UserBoolInput); } catch (Exception e) { System.out.println(&quot;That is not a boolean (true or false), &quot; + e); } input.close(); input = new Scanner(System.in); System.out.print(&quot;Type a string: &quot;); try { String UserStringInput = input.nextLine(); System.out.println(UserStringInput); } catch (Exception e) { System.out.println(&quot;That is not a string, &quot; + e); } input.close(); } } InpPrimitives.main(null); . Enter an integer: 5 5 Enter a double: 2 2.0 Enter a boolean: 5 Not an boolean (true or false), java.util.InputMismatchException Enter a String: 1 1 . public class PrimitiveDivision { public static void main(String[] args) { int sampleint1 = 7, sampleint2 = 2; System.out.println(&quot;Dividing integers&quot;); System.out.println(&quot; tConcatenation example: &quot; + sampleint1 + &quot;/&quot; + sampleint2 + &quot; = &quot; + sampleint1/sampleint2); System.out.println(String.format(&quot; tUsing string formatting: %d/%d = %d&quot;,sampleint1, sampleint2, sampleint1/sampleint2)); System.out.printf(&quot; tint output with printf: %d/%d = %d&quot;,sampleint1, sampleint2, sampleint1/sampleint2); double doub1 = 7.1, doub2 = 2.1; System.out.println(&quot; nDouble Division&quot;); System.out.println(&quot; tConcatenation example: &quot; + doub1 + &quot;/&quot; + doub2 + &quot; = &quot; + doub1/doub2); System.out.println(String.format(&quot; tString formatting: %.2f/%.2f = %.2f&quot;,doub1, doub2, doub1/doub2)); System.out.printf(&quot; tPrintf formatting: %.2f/%.2f = %.2f n&quot;,doub1, doub2, doub1/doub2); System.out.println(&quot;Casting and Remainders&quot;); System.out.printf(&quot; tint cast to double on division: %d/%d = %.2f n&quot;,sampleint1, sampleint2, sampleint1/(double)sampleint2); System.out.println(&quot; tint using modulo for remainder: &quot; + sampleint1 + &quot;/&quot; + sampleint2 + &quot; = &quot; + sampleint1/sampleint2 + &quot; remainder &quot; + sampleint1%sampleint2); } } PrimitiveDivision.main(null); . Dividing integers Concatenation example: 7/2 = 3 Using string formatting: 7/2 = 3 int output with printf: 7/2 = 3 Double Division Concatenation example: 7.1/2.1 = 3.3809523809523805 String formatting: 7.10/2.10 = 3.38 Printf formatting: 7.10/2.10 = 3.38 Casting and Remainders int cast to double on division: 7/2 = 3.50 int using modulo for remainder: 7/2 = 3 remainder 1 . public class GradeCalculator { ArrayList&lt;Double&gt; grades; public GradeCalculator() { this.grades = new ArrayList&lt;&gt;(); this.enterGrades(); } private boolean isZero(double value){ double threshold = 0.001; return value &gt;= -threshold &amp;&amp; value &lt;= threshold; } private void enterGrades() { Scanner input; while (true) { input = new Scanner(System.in); System.out.print(&quot;Enter a double, 0 to exit: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); if (isZero(sampleInputDouble)) break; else this.grades.add(sampleInputDouble); } catch (Exception e) { System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); } } public double average() { double total = 0; for (double num : this.grades) { total += num; } return (total / this.grades.size()); } public static void main(String[] args) { GradeCalculator grades = new GradeCalculator(); System.out.println(&quot;Average: &quot; + String.format(&quot;%.2f&quot;, grades.average())); } } GradeCalculator.main(null); . Enter a double, 0 to exit: 9 9.0 Enter a double, 0 to exit: 9 9.0 Enter a double, 0 to exit: 9 9.0 Enter a double, 0 to exit: 0 0.0 Average: 9.00 . class PrimitiveDemo { public static void main(String[] args) { int DemInt = 143; double DemDoub = 22.7; boolean DemBool = false; String myStr = &quot;Hello World&quot;; System.out.println(DemInt); System.out.println(DemDoub); System.out.println(DemBool); System.out.println(myStr); } } PrimitiveDemo.main(null) . 143 22.7 false Hello World . // Hack 1: Celsius to Farenheit Calculator class CTF { public static void main(String[] args) { Scanner input; input = new Scanner(System.in); System.out.print(&quot;Type in a temperature in celsius: &quot;); try { int UserIntInput = input.nextInt(); double Faren = ((UserIntInput * 9)/5) + 32; // formula System.out.println(UserIntInput + &quot; in celsius is &quot; + Faren + &quot; Farenheit.&quot;); // output string } catch (Exception e) { System.out.println(&quot;That is not a valid temperature &quot; + e); } } } CTF.main(null) . Type in a temperature in celsius: 5 5 in celsius is 41.0 Farenheit. . // Hack: Nth Fibbonacci class Fibo { public static void main(String[] args) { Scanner input; input = new Scanner(System.in); // take user input System.out.print(&quot;Type in a number &quot;); try { int N = input.nextInt(); // how far to go int i1 = 0, i2 = 1; // starting numbers int count = 0; // iteration while (count &lt; N) { System.out.print(i1 + &quot; &quot;); int i3 = i2 + i1; i1 = i2; i2 = i3; count = count + 1; } } catch (Exception e) { System.out.println(&quot;That is not a valid temperature &quot; + e); } } } Fibo.main(null) . Type in a number 5 0 1 1 2 3 .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/10/01/Primitives-Notebook.html",
            "relUrl": "/2022/10/01/Primitives-Notebook.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Java Notebook",
            "content": "public class HelloWorld { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } HelloWorld.main(null); . Hello World! .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/10/01/Java-Jupyter-Notebook.html",
            "relUrl": "/2022/10/01/Java-Jupyter-Notebook.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Bash Notebook",
            "content": "python --version echo &quot;&quot; python2 --version echo &quot;&quot; java --version echo &quot;&quot; javac --version echo &quot;&quot; conda --version echo &quot;&quot; conda list | grep &quot;jupyter&quot; echo &quot;&quot; jupyter --version echo &quot;&quot; jupyter kernelspec list echo &quot;&quot; npm -version . Python 3.9.12 Python 2.7.18 openjdk 18.0.2 2022-07-19 OpenJDK Runtime Environment Homebrew (build 18.0.2+0) OpenJDK 64-Bit Server VM Homebrew (build 18.0.2+0, mixed mode, sharing) javac 18.0.2 conda 4.13.0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /Users/smb/Library/Jupyter/kernels/bash java /Users/smb/Library/Jupyter/kernels/java javascript /Users/smb/Library/Jupyter/kernels/javascript python3 /Users/smb/opt/anaconda3/share/jupyter/kernels/python3 6.4.1 .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/10/01/Bash-Notebook.html",
            "relUrl": "/2022/10/01/Bash-Notebook.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fibonacci Notebook",
            "content": "import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result public Fibo() { this(10); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . public class FiboWhileLoop extends Fibo { public FiboWhileLoop() { this(10); // telescope to avoid code duplication, using default } public FiboWhileLoop(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } static public void main(String[] args) { FiboWhileLoop wFib = new FiboWhileLoop(5); // this is where you set the number (5 in this case) wFib.print(); } // Custom init using while loop instead protected void init() { this.name = &quot;While&quot;; int i = 0; // new long array with only 0 long[] f = new long[] {0,1}; //while i is less than the length desired while (i &lt; this.size) { // sets data first, then adds to f this.setData(f[0]); f = new long[] {f[1], f[0] + f[1]}; // adds to counter i++; } } } FiboWhileLoop.main(null) . Init method = While fibonacci Number 5 = 3 fibonacci List = [0, 1, 1, 2, 3] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] . public class FiboRecurLoop extends Fibo { public FiboRecurLoop() { this(10); // telescope to avoid code duplication, using default } public FiboRecurLoop(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } static public void main(String[] args) { FiboRecurLoop rFib = new FiboRecurLoop(); rFib.print(); } // Recursion function, using int i as a counter protected void recur(long[] f, int i) { // Sets data using beginning value this.setData(f[0]); // Cretes new long f = new long[]{f[1], f[0] + f[1]}; // Adds to counter i++; if (i &lt; this.size) { // Recusion continues if size limit has not been reached this.recur(f, i); } } // Custom init using recursion loop instead protected void init() { this.name = &quot;Recursion&quot;; System.out.println(&quot;This is the recursion loop&quot;); // Uses int i as a counter for recusion, also creates initial long[] int i = 0; long[] f = new long[] {0,1}; // input long and counter i into recursion function this.recur(f, i); } } FiboRecurLoop.main(null) . This is the recursion loop This is the recursion loop Init method = Recursion fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . public class FiboForLoop extends Fibo { public FiboForLoop() { this(10); // telescope to avoid code duplication, using default } public FiboForLoop(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } static public void main(String[] args) { FiboForLoop fFib = new FiboForLoop(); fFib.print(); } // Custom init using for loop instead protected void init() { this.name = &quot;For&quot;; // creates initial long[] long[] f = new long[] {0,1}; // iterates through until reaches desired length for (int i = 0; i &lt; this.size; i++) { // sets data, then updates f this.setData(f[0]); f = new long[] {f[1], f[0] + f[1]}; } } } FiboForLoop.main(null) . Init method = For fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/09/25/Java-Fibonacci.html",
            "relUrl": "/2022/09/25/Java-Fibonacci.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Week 4 - FRQ 1",
            "content": "Hacks . Iteration minilab Completed | FRQ No 1 Completed | . Review Ticket . Iteration Notebook . Notebook Link . FRQ No 1 . FRQ No. 1 .",
            "url": "https://sanjayb06.github.io/tri1fastpages/markdown/2022/09/19/Week-4-FRQ.html",
            "relUrl": "/markdown/2022/09/19/Week-4-FRQ.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "ASCII Array Art",
            "content": "import java.util.concurrent.ThreadLocalRandom; class carLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] cars; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of cars */ public carLoop() { //Storing Data in 2D arrays cars = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //car 0 { &quot; ______&quot;, &quot; /|_||_ `.__&quot;, &quot;( _ _ _ &quot;, &quot;=`-(_)--(_)-&#39; &quot; }, //car 1 { &quot; ____&quot;, &quot; __/ |_ _&quot;, &quot;| _ _``-.&quot;, &quot;&#39;-(_)(_)--&#39;&quot; }, //car 2 { &quot; _.-.___ __&quot;, &quot;| _ _`-. &quot;, &quot;&#39;-(_)-(_)--`&quot; }, //car 3 { &quot; ____&quot;, &quot; ____//_]|________&quot;, &quot; (o _ | -| _ o| &quot;, &quot; `(_)-(_)--&#39;&quot; }, //car 4 { &quot; _____________&quot;, &quot; ____//__][__][___|&quot;, &quot;(o _| -| _ o|&quot;, &quot; `-(_)--(_)-&#39;&quot; }, }; } /** * Loop and print cars in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Car race poem&quot;); // cars (non-primitive) defined in constructor knows its length int carCount = cars.length; int i = carCount; while (i&gt;=1) //loops through 2D array length backwards { //this print statement shows current count of cars // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; Cars left in the race&quot;); for (int row = 0; row &lt; i; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each car part by part, will eventually print entire column*/ for (int col = 0; col &lt; cars[row].length; col++) { // prints specific part of the car from the column System.out.print(cars[row][col] + &quot; n&quot;); //this is new line between separate parts // System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing carCount variable by 1 int randomNum = ThreadLocalRandom.current().nextInt(1, carCount); carCount -= 1; i -= randomNum; } //out of all the loops, prints finishing messages System.out.println(&quot;WINNER&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new carLoop().printPoem(); //a new car list and output in one step } } carLoop.main(null); . Car race poem 5 Cars left in the race ______ /|_||_ `.__ ( _ _ _ =`-(_)--(_)-&#39; ____ __/ |_ _ | _ _``-. &#39;-(_)(_)--&#39; _.-.___ __ | _ _`-. &#39;-(_)-(_)--` ____ ____//_]|________ (o _ | -| _ o| `(_)-(_)--&#39; _____________ ____//__][__][___| (o _| -| _ o| `-(_)--(_)-&#39; 4 Cars left in the race ______ /|_||_ `.__ ( _ _ _ =`-(_)--(_)-&#39; ____ __/ |_ _ | _ _``-. &#39;-(_)(_)--&#39; _.-.___ __ | _ _`-. &#39;-(_)-(_)--` ____ ____//_]|________ (o _ | -| _ o| `(_)-(_)--&#39; 1 Cars left in the race ______ /|_||_ `.__ ( _ _ _ =`-(_)--(_)-&#39; WINNER 0000000000000000000000000000000000 THE END .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/09/19/Java-Ascii-art.html",
            "relUrl": "/2022/09/19/Java-Ascii-art.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "2007 FRQ No 1",
            "content": "/* * @param number the number to be tested * Precondition: number 0 &gt; * @return true if every decimal digit of number is a divisor of number; * false otherwise */ public static boolean isSelfDivisor(int number) { int copynum = number; while (number &gt; 0) { int digit = number % 10; // get last digit by getting remainder of division by 10 (int will eliminate decimal point) if (digit ==0 || copynum % digit != 0) { // if remainder of number and digit isnt 0, not divisble return false; // cant have 0, every digit must be divisible } number /= 10; // divide number by 10 for next iteration in order to get the next digit } return true; } // Testing method with different inputs System.out.println(&quot;Is 105 a self divisior? &quot; + isSelfDivisor(105)); // Testing number with 0 in it System.out.println(&quot;Is 143 a self divisior? &quot; + isSelfDivisor(143)); // Testing non self divisor System.out.println(&quot;Is 128 a self divisior? &quot; + isSelfDivisor(128)); // Testing given example of self divisor: 128 . Is -5 a self divisor? false Is 105 a self divisior? false Is 143 a self divisior? false Is 128 a self divisior? true . /* * @param start starting point for values to be checked * Precondition: start &gt; 0 * @param num the size of the array to be returned * Precondition: num 0 &gt; * @return an array containing the first num integers ≥ start that are self-divisors */ public static int[] firstNumSelfDivisors(int start, int num) { int[] sds = new int[num]; // starting empty list with lenght equal to num int total = 0; // keeps track of self divisors found while (total &lt; num) { if (isSelfDivisor(start)) { sds[total] = start; // adds selected number total ++; // incremements total added } start ++; // moves on to next number } return sds; } System.out.println(&quot;First 5 Self Divisors from 13: &quot;); for (int n : firstNumSelfDivisors(13, 5)) { System.out.print(n + &quot;, &quot;); } . First 5 Self Divisors from 13: 15, 22, 24, 33, 36, . // FULL ANSWER public class selfDivisor { /* * @param number the number to be tested * Precondition: number 0 &gt; * @return true if every decimal digit of number is a divisor of number; * false otherwise */ public static boolean isSelfDivisor(int number) { int copynum = number; while (number &gt; 0) { int digit = number % 10; // get last digit by getting remainder of division by 10 (int will eliminate decimal point) if (digit ==0 || copynum % digit != 0) { // if remainder of number and digit isnt 0, not divisble return false; // cant have 0, every digit must be divisible } number /= 10; // divide number by 10 for next iteration in order to get the next digit } return true; } /* * @param start starting point for values to be checked * Precondition: start &gt; 0 * @param num the size of the array to be returned * Precondition: num 0 &gt; * @return an array containing the first num integers ≥ start that are self-divisors */ public static int[] firstNumSelfDivisors(int start, int num) { int[] sds = new int[num]; // starting empty list with lenght equal to num int total = 0; // keeps track of self divisors found while (total &lt; num) { if (isSelfDivisor(start)) { sds[total] = start; // adds selected number total ++; // incremements total added } start ++; // moves on to next number } return sds; } public static void main(String[] args) { System.out.println(&quot;Is 135 a self divisor? &quot; + isSelfDivisor(135)); System.out.println(&quot;Is 31 a self divisor? &quot; + isSelfDivisor(31)); // print the array System.out.println(&quot;5 self divisors after 33: &quot;); for (int n : firstNumSelfDivisors(33, 5)) { System.out.print(n + &quot;, &quot;); } } } selfDivisor.main(null) . Is 135 a self divisor? true Is 31 a self divisor? false 5 self divisors after 33: 33, 36, 44, 48, 55, .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/09/15/AP-FRQ-1.html",
            "relUrl": "/2022/09/15/AP-FRQ-1.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Week 3 - Deployment",
            "content": "Hacks . Deployment almost completed completely | IF Loops Completed | Focus and Habits Notes | . Review Ticket . Issue . Deployment . Screenshot of Current States . Link to site . If Notebook . Notebook Link . Focus And Habits . Focus and Habits Blog .",
            "url": "https://sanjayb06.github.io/tri1fastpages/markdown/2022/09/11/Week3-Deployment.html",
            "relUrl": "/markdown/2022/09/11/Week3-Deployment.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Java Conditionals Notebook",
            "content": "If Statements . If statements evaluate the conditional given, and if true, execute the code block inside the statement. . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double x; double y; System.out.print(&quot;Enter a number: &quot;); x = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter another number: &quot;); y = scanner.nextDouble(); System.out.println(y); // Modulo function returns remainder of x and y // checks if remainder of x and y is 0 (meaning it is divisible) if (x % y == 0) { System.out.println(x + &quot; is divisible by &quot; + y); } . Enter a number: 10.0 Enter another number: 5.0 10.0 is divisible by 5.0 . If-Else Statements . If statements contain code to be run if a given conditional is true. Else statements contain code to be run if that conditional is proven false. . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double x; double y; System.out.print(&quot;Enter a number: &quot;); x = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter another number: &quot;); y = scanner.nextDouble(); System.out.println(y); // Modulo function returns remainder of x and y // checks if remainder of x and y is 0 (meaning it is divisible) if (x % y == 0) { System.out.println(x + &quot; is divisible by &quot; + y); } else { // the code below runs if the remainder of x and y is NOT 0 System.out.println(x + &quot; is NOT divisible by &quot; + y); } . Enter a number: 20.0 Enter another number: 7.0 20.0 is NOT divisible by 7.0 . If-elseif-else . Elseif blocks come between if and else statements. Elseif statements function similar to if statements in that they contain code that is run if a given conditional is true. However, elseif statements only run if the prior if or elseif block is false. Otherwise, they are passed over. . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double x; double y; System.out.print(&quot;Enter a number: &quot;); x = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter another number: &quot;); y = scanner.nextDouble(); System.out.println(y); if (x &gt; y) { // checks if x is greater than y System.out.println(x + &quot; is greater than &quot; + y); } else if (x == y) { // if x isnt greater than y, check if theyre equal System.out.println(x + &quot; is equal to &quot; + y); } else { // only option is x being less than y System.out.println(x + &quot; is less than &quot; + y); } . Multiple elseifs . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double x; double y; System.out.print(&quot;First number: &quot;); x = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter the operation (+,-,*,/): &quot;); char operator = scanner.next().charAt(0); System.out.println(operator); System.out.print(&quot;second number: &quot;); y = scanner.nextDouble(); System.out.println(y); if (operator == &#39;+&#39;) { System.out.println(x + y); } else if (operator == &#39;-&#39;) { System.out.println(x - y); } else if (operator == &#39;*&#39;) { System.out.println(x * y); } else if (operator == &#39;/&#39;) { System.out.println(x / y); } else { System.out.println(&quot;Invalid operator&quot;); } . First number: 7.0 Enter the operation (+,-,*,/): 9 second number: 9.0 Invalid operator . double num1, num2; Scanner scanner = new Scanner(System.in); System.out.print(&quot;Enter a color (r,g,b,y): &quot;); char color = scanner.next().charAt(0); System.out.println(color); Scanner newScanner = new Scanner(System.in); System.out.println(&quot;type a message&quot;); String message = newScanner.nextLine(); String output = &quot;&quot;; switch (color) { case &#39;r&#39;: output = &quot; u001B[31m&quot;; break; case &#39;g&#39;: output = &quot; u001B[32m&quot;; break; case &#39;b&#39;: output = &quot; u001B[34m&quot;; break; case &#39;y&#39;: output = &quot; u001B[33m&quot;; break; default: System.out.println(&quot;invalid color&quot;); break; } System.out.println(&quot;The final result: &quot;); System.out.println(output + message); . Enter a color (r,g,b,y): g type a message The final result: fadfadf . De Morgan&#39;s Law . Augstus De Morgan developed DeMorgan&#39;s laws in the 1800s. DeMorgan&#39;s law explains complex conditional negation. A complex conditional is multiple conditional statements joined by a logical operator. . not (a and b) is the same as (not a) or (not b). In Java this is written as !(a &amp;&amp; b) == !a || !b . not (a or b) is the same as (not a) and (not b). In Java this is written as !(a || b) == !a &amp;&amp; !b . Negation modifies each conditional. . public class DeMorgansAndTest { public static void main(String[] args) { int x = 15; int y = 164; System.out.println(!(x&lt;20 &amp;&amp; y &gt; 100)); // prints true if x is not less than 20 or if y is not greater than 100 // prints false if none of these are true // this output should be false since x is less than 20 and y is greater than 100 } } DeMorgansAndTest.main(null) . false . public class DeMorgansOrTest { public static void main(String[] args) { int x = 124; int y = 9; System.out.println(!(x &gt; 200 || y &lt; 2)); // prints true if x is not &gt; 200 AND y is not &lt; 2 // prints false otherwise // this output should be true as x is NOT greater than 200 and y is NOT less than 2 } } DeMorgansOrTest.main(null) . true .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/09/09/Java-If-Notebook.html",
            "relUrl": "/2022/09/09/Java-If-Notebook.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Java Menu",
            "content": "Java Menu . import java.net.http.*; import java.util.Scanner; . import java.util.Scanner; import java.lang.Math; public class Menu { public final String DEFAULT = &quot; u001B[0m&quot;; public final String[][] COLORS = { {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, {&quot;Reset&quot;,&quot; u001B[0m&quot;}, {&quot;Liverpool&quot;,&quot; 033[1;91m&quot;}, {&quot;Tottenham&quot;,&quot; 033[0;107m&quot;}, {&quot;Real&quot;,&quot; 033[0;95m&quot;}, {&quot;Bayern&quot;,&quot; 033[0;101m&quot;}, {&quot;Dortmund&quot;, &quot; 033[0;93m&quot;}, }; public final int NAME = 0; public final int ANSI = 1; public Menu() { Scanner sc = new Scanner(System.in); this.print(); boolean quit = false; while (!quit) { try { int choice = sc.nextInt(); System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); } catch (Exception e) { sc.nextLine(); System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } private void print() { System.out.println(&quot;- n&quot;); System.out.println(&quot;Soccer Info&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Premier League Scorers&quot;); System.out.println(&quot;2 - La Liga Scorers&quot;); System.out.println(&quot;3 - Champions Scorers &quot;); System.out.println(&quot;4 - Bundesliga Scorers&quot;); System.out.println(&quot;5 - Serie A Scorers&quot;); System.out.println(&quot;6 - Goals Against Calculator&quot;); System.out.println(&quot;7 - Shooting Percentage Calculator&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } private boolean action(int selection) { boolean quit = false; switch (selection) { case 0: System.out.print(&quot;Program Exiting...&quot;); quit = true; break; case 1: System.out.println(COLORS[4][ANSI] + &quot;Premier League Top Scorers&quot; + COLORS[8][ANSI]); System.out.println(COLORS[9][ANSI] + &quot; t Mohamed Salah&quot; + COLORS[8][ANSI]); System.out.println(&quot; t&quot; + COLORS[10][ANSI] + &quot;Son&quot; + COLORS[8][ANSI]); System.out.println(COLORS[1][ANSI] + &quot; t Cristiano Ronaldo&quot; + COLORS[8][ANSI]); System.out.println(&quot; t&quot; + COLORS[10][ANSI] + &quot;Harry Kane&quot; + COLORS[8][ANSI]); System.out.println(COLORS[9][ANSI] + &quot; t Sadio Mane&quot; + COLORS[8][ANSI]); break; case 2: System.out.println(COLORS[1][ANSI] + &quot;La Liga Top Scorers&quot; + COLORS[8][ANSI]); System.out.println(COLORS[11][ANSI] + &quot; t Karim Benzema&quot; + COLORS[8][ANSI]); System.out.println(&quot; t Iago Aspas&quot;); System.out.println(&quot; t Raul de Tomas&quot;); System.out.println(COLORS[11][ANSI] + &quot; t Vinicius&quot; + COLORS[8][ANSI]); System.out.println(&quot; t Juanmi&quot;); // for(int i = 0; i &lt; COLORS.length; i++) // System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.println(COLORS[6][ANSI] + &quot;Champions League Top Scorers&quot; + COLORS[8][ANSI]); System.out.println(COLORS[11][ANSI] + &quot; t Karim Benzema&quot; + COLORS[8][ANSI]); System.out.println(&quot; t u001B[37m&quot; + COLORS[12][ANSI] + &quot;Robert Lewangoalski&quot; + COLORS[8][ANSI]); System.out.println(&quot; t Sébastien Haller&quot;); System.out.println(COLORS[9][ANSI] + &quot; t Mohamed Salah&quot; + COLORS[8][ANSI]); System.out.println(&quot; t Christopher Nkunku&quot;); // for (int i = 0; i &lt; 20; i++) { // int random = (int) (Math.random() * COLORS.length); // try { // Thread.sleep(100); // } catch (Exception e) { // System.out.println(e); // } // System.out.print(COLORS[random][ANSI] + &quot;#&quot;); // } break; case 4: System.out.println(COLORS[5][ANSI] + &quot;Bundesliga&quot; + COLORS[8][ANSI]); System.out.println(&quot; t u001B[37m&quot; + COLORS[12][ANSI] + &quot;Robert Lewangoalski&quot; + COLORS[8][ANSI]); System.out.println(&quot; t Patrick Schick&quot;); System.out.println(&quot; t 033[0;93m&quot; + COLORS[13][ANSI] + &quot;Erling Haaland&quot; + COLORS[8][ANSI]); System.out.println(&quot; t Anothny Modeste&quot;); System.out.println(&quot; t Christopher Nkunku&quot;); break; case 5: System.out.println(COLORS[2][ANSI] + &quot;Serie A&quot; + COLORS[8][ANSI]); System.out.println(&quot; t Ciro Immobile&quot;); System.out.println(&quot; t Dušan Vlahović&quot;); System.out.println(&quot; t Lautaro Martínez&quot;); System.out.println(&quot; t Tammy Abraham&quot;); System.out.println(&quot; t Giovanni Simeone&quot;); break; case 6: Scanner myObj = new Scanner(System.in); System.out.println(&quot;Enter Goals Against and Games Played:&quot;); int GoalsAgainst = myObj.nextInt(); double GamesPlayed = myObj.nextDouble(); myObj.close(); System.out.println(&quot;Goals Against Average: &quot; + GoalsAgainst/GamesPlayed); case 7: Scanner newObj = new Scanner(System.in); System.out.println(&quot;Enter Goals Scored and Shots Taken:&quot;); int GoalsScored = newObj.nextInt(); double ShotsTaken = newObj.nextDouble(); newObj.close(); System.out.println(&quot;Shooting Percentage: &quot; + GoalsScored/ShotsTaken); default: System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); return quit; } static public void main(String[] args) { new Menu(); } } Menu.main(null); . - Soccer Info - 1 - Premier League Scorers 2 - La Liga Scorers 3 - Champions Scorers 4 - Bundesliga Scorers 5 - Serie A Scorers 6 - Goals Against Calculator 7 - Shooting Percentage Calculator 0 - Quit - 1 1: Premier League Top Scorers Mohamed Salah Son Cristiano Ronaldo Harry Kane Sadio Mane 7 7: Enter Goals Scored and Shots Taken: 10 40 Shooting Percentage: 0.25 Unexpected choice, try again. 0 0: Program Exiting... .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/08/31/Java-Objects-Menu.html",
            "relUrl": "/2022/08/31/Java-Objects-Menu.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Code.org Key Learning",
            "content": "Lesson 10 . . Inheritance: This code syntax shows how to create a new Child class that inherits from a parents class. All the methods and attributes can now be used in the new child class. . . The extends keyword shows that the new PainterPlus class inherits from the original Painter class. This means that it inherits all of its properties and methods, and that these methods can be used in the new class. . PainterPlus.java . . MyNeighborhood.java . . Methods . Lesson 14 . PainterPlus.java . PainterPlus extends everything from the Painter parent class. . PatternPainter.java . PatternPainter inherits from the PainterPlus class. Since PainterPlus inherits from Painter, PatternPainter will be able to use both PainterPlus and Painter methods and attributes. . BackgroundPainter.java . BackgroundPainter goes even further and extends from PatternPainter, meaning it can use methods from PatternPainter as well as PainterPlus and Painter. . Check For Understanding . . Taco extending food is the only one that represents a class inheritance example because Taco is a subclass of Food. .",
            "url": "https://sanjayb06.github.io/tri1fastpages/markdown/2022/06/09/Code-Key-Learning.html",
            "relUrl": "/markdown/2022/06/09/Code-Key-Learning.html",
            "date": " • Jun 9, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Week 2 - Primitives",
            "content": "Hacks . Java Menu Created with colors &amp; input | Code.org up to 15 | . Review Ticket . Issue . Notebooks . Java Menu Notebook . . Code.org Learning . Code.org Key Learning .",
            "url": "https://sanjayb06.github.io/tri1fastpages/markdown/2022/05/09/Week-2-Menu.html",
            "relUrl": "/markdown/2022/05/09/Week-2-Menu.html",
            "date": " • May 9, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Arrays and Images",
            "content": "import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; public class ImageIOTest { public static void main( String[] args ){ BufferedImage img = null; // buffer type try { // Name of file and directories String name = &quot;dice&quot;; String in = &quot;images/&quot;; String out = &quot;images/tmp/&quot;; // Either use URL or File for reading image using ImageIO File imageFile = new File(in + name + &quot;.png&quot;); img = ImageIO.read(imageFile); // set buffer of image data // ImageIO Image write to gif in Java // Documentation https://docs.oracle.com/javase/tutorial/2d/images/index.html ImageIO.write(img, &quot;gif&quot;, new File(out + name + &quot;.gif&quot;) ); // write buffer to gif } catch (IOException e) { e.printStackTrace(); } System.out.println(&quot;Success&quot;); } } ImageIOTest.main(null); . Success . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics dice = new Pics(&quot;dice&quot;, &quot;png&quot;); dice.printStats(&quot;Original&quot;); dice.resize(33); dice.printStats(&quot;Scaled&quot;); dice.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); } } Pics.main(null); . Original: 226933 800x600 images/dice.png Scaled: 55342 264x198 images/tmp/dice.png Original: 0 0x0 images/pumpkin.png Scaled: 0 0x0 images/pumpkin.png . java.lang.NullPointerException: Cannot invoke &#34;java.awt.image.BufferedImage.getHeight()&#34; because &#34;&lt;local1&gt;&#34; is null at Pics.convertToAscii(#35:1) at Pics.main(#35:1) at .(#37:1) . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private final String greyDir = &quot;images/tmp/greyscale/&quot;; private final String redDir = &quot;images/tmp/red/&quot;; private final String blueDir = &quot;images/tmp/blue/&quot;; private final String greenDir = &quot;images/tmp/green/&quot;; private String inFile; private String resizedFile; private String redFile; private String greenFile; private String blueFile; private String greyscaleFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.greyscaleFile = this.greyDir + name + &quot;_grey&quot; + &quot;.&quot; + ext; this.redFile = this.redDir + name + &quot;_red&quot; + &quot;.&quot; + ext; this.blueFile = this.blueDir + name + &quot;_blue&quot; + &quot;.&quot; + ext; this.greenFile = this.greenDir + name + &quot;_green&quot; + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } public void greyscale() { BufferedImage img = null; BufferedImage greyImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data greyImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) (co.getRed() * 0.299); int green = (int) (co.getGreen() * 0.587); int blue = (int) (co.getBlue() * 0.114); int total = red + green + blue; Color newColor = new Color( total, total, total ); greyImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(greyImg), this.ext, new File(greyscaleFile)); } catch (IOException e) { return; } this.inFile = this.greyscaleFile; // use scaled file vs original file in Class this.setStats(); } public void redscale() { BufferedImage img = null; BufferedImage redImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data redImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) co.getRed(); int green = 0; int blue = 0; Color newColor = new Color( red, green, blue); redImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(redImg), this.ext, new File(redFile)); } catch (IOException e) { return; } this.inFile = this.redFile; // use scaled file vs original file in Class this.setStats(); } public void greenscale() { BufferedImage img = null; BufferedImage greenImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data greenImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = 0; int green = (int) co.getGreen(); int blue = 0; Color newColor = new Color( red, green, blue); greenImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(greenImg), this.ext, new File(greenFile)); } catch (IOException e) { return; } this.inFile = this.greenFile; // use scaled file vs original file in Class this.setStats(); } public void bluescale() { BufferedImage img = null; BufferedImage blueImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data blueImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) (co.getRed() * 0.299); int green = (int) (co.getGreen() * 0.587); int blue = (int) (co.getBlue() * 0.114); int total = red + green + blue; Color newColor = new Color(0, 0, total); blueImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(blueImg), this.ext, new File(blueFile)); } catch (IOException e) { return; } this.inFile = this.blueFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { if (i % 2 != 0) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics godfather = new Pics(&quot;godfather&quot;, &quot;png&quot;); godfather.greyscale(); godfather.redscale(); godfather.greenscale(); godfather.bluescale(); godfather.printStats(&quot;Original&quot;); godfather.resize(33); godfather.printStats(&quot;Scaled&quot;); godfather.convertToAscii(); } } Pics.main(null); . Original: 814662 600x338 images/godfather.png Scaled: 45034 198x112 images/tmp/godfather.png .",
            "url": "https://sanjayb06.github.io/tri1fastpages/2022/02/10/Java-Images.html",
            "relUrl": "/2022/02/10/Java-Images.html",
            "date": " • Feb 10, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Week 1 - Primitives",
            "content": "Hacks . Issue . Notebooks . Bash Notebook | Java Primitives Notebook | . Productive Blogging . Vocab Page Added | . Code.org Learning . . Study Plan . Capture information that will grow to 10 CB Units . Daily CB videos Organize jupyter based on units w/ key code segments | . | Practice AP MCs and FRQs, especially near April | Collegeboard work and practice | . As AP Test date gets closer I will: . Take practice tests to determine strong and weak concepts Review old material and search for new resources | . | Take practice MCs | Take practice FRQs | Take full lenght, sit down, timed AP exams | .",
            "url": "https://sanjayb06.github.io/tri1fastpages/markdown/2021/08/28/Week-1-Primitives.html",
            "relUrl": "/markdown/2021/08/28/Week-1-Primitives.html",
            "date": " • Aug 28, 2021"
        }
        
    
  
    
        ,"post16": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://sanjayb06.github.io/tri1fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post17": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://sanjayb06.github.io/tri1fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  
    
        ,"post18": {
            "title": "Week 0 - Tools",
            "content": "Hacks . Hack #1: Fastpages . Python Jupyter Notebook . Java Jupyter Notebook . Editing fastpage in vscode: . Hack #2: Java Runtime . Java running on Localhost port 8080 . Tangibles . Fastpage Insights . Java Insights . Week 0 Review Ticket . Spring Commit .",
            "url": "https://sanjayb06.github.io/tri1fastpages/markdown/2020/01/14/Week-0-Tools.html",
            "relUrl": "/markdown/2020/01/14/Week-0-Tools.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://sanjayb06.github.io/tri1fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  

  
      ,"page8": {
          "title": "Vocab",
          "content": "This is where vocab will be added throughout the year .",
          "url": "https://sanjayb06.github.io/tri1fastpages/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://sanjayb06.github.io/tri1fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}